    private ServiceProxy<MyPortTypeClient, MyPortType> getClient()
    {
    	EndpointAddress endpoint = new EndpointAddress(wsEndpoint);
    	
    	// The binding
    	BasicHttpBinding binding = new BasicHttpBinding();
    	binding.OpenTimeout = minutes(1);
    	binding.CloseTimeout = minutes(1);
    	binding.SendTimeout = minutes(10);
    	binding.ReceiveTimeout = minutes(10);
    
    	binding.MaxBufferPoolSize = Int32.MaxValue;
    	binding.MaxReceivedMessageSize = Int32.MaxValue;
    	binding.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
    
    	binding.MessageEncoding = WSMessageEncoding.Mtom;
    	if (binding is BasicHttpBinding)
    	{
    		// Also setting to streamed mode
    		((BasicHttpBinding)(Object)binding).TransferMode = TransferMode.Streamed;
    	}
    
    	binding.AllowCookies = true;
    
    	// MyPortType and MyPortTypeClient are implemented in Reference.cs, i.e. this
    	// code is generated by svcutil or Visual Studio from your WSDL.
    	MyPortTypeClient _proxy = new MyPortTypeClient(binding, endpoint);
    	ServiceProxy<MyPortTypeClient, MyPortType> proxy = new ServiceProxy<MyPortTypeClient, MyPortType>(_proxy);
    
    	if (!String.IsNullOrEmpty(wsUsername) && !String.IsNullOrEmpty(wsPassword))
    	{
    		UserNamePasswordClientCredential credentials = _proxy.ClientCredentials.UserName;
    		credentials.UserName = wsUsername;
    		credentials.Password = wsPassword;
    	}
    	return proxy;
    }
